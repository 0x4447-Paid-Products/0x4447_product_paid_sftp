{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Describse the SFTP Singe User Server - product of 0x4447",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [
				{
					"Label": {
						"default": "Deployment"
					},
					"Parameters": [
						"UniqueIdentifierParam"
					]
				},
				{
					"Label": {
						"default": "Monitoring"
					},
					"Parameters": [
						"EmailParam"
					]
				},
				{
					"Label": {
						"default": "Instance"
					},
					"Parameters": [
						"InstanceTypeParam",
						"KeyNameParam",
						"CustomAMIIdParam"
					]
				},
				{
					"Label": {
						"default": "Network"
					},
					"Parameters": [
						"VPCParam",
						"CidrParam",
						"VPCSubnetsPublicParam"
					]
				},
				{
					"Label": {
						"default": "SFTP User"
					},
					"Parameters": [
						"UsernameParam",
						"PasswordParam"
					]
				},
				{
					"Label": {
						"default": "Debug"
					},
					"Parameters": [
						"CustomAMIIdParam"
					]
				}
			],
			"ParameterLabels": {
				"UniqueIdentifierParam": {
					"default": "Unique Identifier"
				},
				"KeyNameParam": {
					"default": "EC2 Private Key"
				},
				"InstanceTypeParam": {
					"default": "Instance Type"
				},
				"VPCParam": {
					"default": "VPC ID"
				},
				"CidrParam": {
					"default": "VPC CIDR"
				},
				"VPCSubnetsPublicParam": {
					"default": "Public Subnet"
				},
				"CustomAMIIdParam": {
					"default": "AMI ID"
				},
				"EmailParam": {
					"default": "Email"
				},
				"UsernameParam": {
					"default": "SFTP Username"
				},
				"PasswordParam": {
					"default": "SFTP Password"
				}
			}
		}
	},
	"Parameters": {
		"UniqueIdentifierParam": {
			"Description": "Provide a unique name of this deployment to be used while naming different resources.",
			"Type": "String"
		},
		"EmailParam": {
			"Description": "Wrtie the email the CloudWatch Alarms should use to send allerts. WARNING: you have to confirm your subscription to receive the emails.",
			"Type": "String"
		},
		"InstanceTypeParam": {
			"Type": "String",
			"Default": "t3a.nano",
			"Description": "Select a instance type that fits your use case.",
			"AllowedValues": [
				"t2.nano",
				"t2.micro",
				"t2.small",
				"t2.medium",
				"t2.large",
				"t2.xlarge",
				"t2.2xlarge",
				"t3.nano",
				"t3.micro",
				"t3.small",
				"t3.medium",
				"t3.large",
				"t3.xlarge",
				"t3.2xlarge",
				"t3a.nano",
				"t3a.micro",
				"t3a.small",
				"t3a.medium",
				"t3a.large",
				"t3a.xlarge",
				"t3a.2xlarge",
				"m3.medium",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"m4.large",
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge",
				"m4.10xlarge",
				"m4.16xlarge",
				"m5.large",
				"m5.xlarge",
				"m5.2xlarge",
				"m5.4xlarge",
				"m5.8xlarge",
				"m5.12xlarge",
				"m5.16xlarge",
				"m5.24xlarge",
				"m5.metal",
				"m5a.large",
				"m5a.xlarge",
				"m5a.2xlarge",
				"m5a.4xlarge",
				"m5a.8xlarge",
				"m5a.12xlarge",
				"m5a.16xlarge",
				"m5a.24xlarge",
				"m5ad.large",
				"m5ad.xlarge",
				"m5ad.2xlarge",
				"m5ad.4xlarge",
				"m5ad.12xlarge",
				"m5ad.24xlarge",
				"m5d.large",
				"m5d.xlarge",
				"m5d.2xlarge",
				"m5d.4xlarge",
				"m5d.8xlarge",
				"m5d.12xlarge",
				"m5d.16xlarge",
				"m5d.24xlarge",
				"m5d.metal"
			]
		},
		"CidrParam": {
			"Description": "The CIDR block of the selected VPC. For example 10.0.0.0/16",
			"Type": "String"
		},
		"VPCSubnetsPublicParam": {
			"Description": "Select a public subnet to deploy the instance in.",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"VPCParam": {
			"Description": "The VPC ID where the deployment should end up.",
			"Type": "AWS::EC2::VPC::Id"
		},
		"KeyNameParam": {
			"Description": "Select the SSH Key to be attached to the instance.",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
		"CustomAMIIdParam": {
			"Description": "INTERNAL USE ONLY >><< Keep this field empty.",
			"Type": "String"
		},
		"UsernameParam": {
			"Description": "The user name of the SFTP server.",
			"Type": "String"
		},
		"PasswordParam": {
			"Description": "The password of the SFTP user.",
			"Type": "String",
			"NoEcho": true
		}
	},
	"Mappings": {
		"OSIDs": {
			"eu-west-2": {
				"64": "ami-06bd102ae080f379a"
			},
			"ca-central-1": {
				"64": "ami-03b4574c51e884a7a"
			},
			"us-west-2": {
				"64": "ami-02c7dfd5a2b7430e6"
			},
			"us-east-2": {
				"64": "ami-021ef60b25095762e"
			},
			"us-east-1": {
				"64": "ami-05b2f27970e71bcf6"
			},
			"us-west-1": {
				"64": "ami-0852a372a89a63893"
			},
			"sa-east-1": {
				"64": "ami-083b7be64e3ec08e4"
			},
			"eu-west-3": {
				"64": "ami-05dec839052c8d1d4"
			},
			"eu-central-1": {
				"64": "ami-00c174385c5d955a4"
			},
			"eu-west-1": {
				"64": "ami-0380b942426150ac5"
			},
			"ap-northeast-2": {
				"64": "ami-0f48983976edd3e82"
			},
			"ap-northeast-1": {
				"64": "ami-084a7770fca55de89"
			},
			"ap-south-1": {
				"64": "ami-093524baa6b5de0e1"
			},
			"ap-southeast-2": {
				"64": "ami-02ab18f5315f9535e"
			},
			"ap-southeast-1": {
				"64": "ami-0e6ff58bb16bb93c7"
			},
			"eu-north-1": {
				"64": "ami-04f72ad12801a72cf"
			}
		}
	},
	"Conditions": {
		"isCustomAMI": {
			"Fn::Not": [
				{
					"Fn::Equals": [
						{
							"Ref": "CustomAMIIdParam"
						},
						""
					]
				}
			]
		}
	},
	"Resources": {
		"BackupPlan": {
			"Type": "AWS::Backup::BackupPlan",
			"Properties": {
				"BackupPlan": {
					"BackupPlanName": {
						"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
					},
					"BackupPlanRule": [
						{
							"RuleName": {
								"Fn::Sub": "Daily Backups with 7 Days retention"
							},
							"TargetBackupVault": {
								"Ref": "BackupVault"
							},
							"ScheduleExpression": "cron(0 5 ? * * *)",
							"Lifecycle": {
								"DeleteAfterDays": 7
							},
							"RecoveryPointTags": {
								"Name": {
									"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
								}
							}
						}
					]
				},
				"BackupPlanTags": {
					"Name": {
						"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
					}
				}
			}
		},
		"BackupSelection": {
			"Type": "AWS::Backup::BackupSelection",
			"Properties": {
				"BackupPlanId": {
					"Ref": "BackupPlan"
				},
				"BackupSelection": {
					"SelectionName": {
						"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
					},
					"IamRoleArn": {
						"Fn::GetAtt": [
							"BackupRole",
							"Arn"
						]
					},
					"ListOfTags": [
						{
							"ConditionType": "STRINGEQUALS",
							"ConditionKey": "Name",
							"ConditionValue": {
								"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
							}
						}
					]
				}
			}
		},
		"BackupRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "backup.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"Policies": [
					{
						"PolicyName": "efs_backup",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Action": [
										"elasticfilesystem:Backup"
									],
									"Resource": "arn:aws:elasticfilesystem:*:*:file-system/*",
									"Effect": "Allow"
								},
								{
									"Action": [
										"tag:GetResources"
									],
									"Resource": "*",
									"Effect": "Allow"
								},
								{
									"Effect": "Allow",
									"Action": [
										"backup:DescribeBackupVault",
										"backup:CopyIntoBackupVault"
									],
									"Resource": "arn:aws:backup:*:*:backup-vault:*"
								}
							]
						}
					},
					{
						"PolicyName": "efs_restore",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"elasticfilesystem:Restore",
										"elasticfilesystem:CreateFilesystem",
										"elasticfilesystem:DescribeFilesystems",
										"elasticfilesystem:DeleteFilesystem"
									],
									"Resource": "arn:aws:elasticfilesystem:*:*:file-system/*"
								}
							]
						}
					}
				]
			}
		},
		"BackupVault": {
			"Type": "AWS::Backup::BackupVault",
			"Properties": {
				"BackupVaultName": {
					"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
				},
				"BackupVaultTags": {
					"Name": {
						"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
					}
				}
			}
		},
		"EFS": {
			"Type": "AWS::EFS::FileSystem",
			"Properties": {
				"Encrypted": true,
				"PerformanceMode": "generalPurpose",
				"ThroughputMode": "bursting",
				"FileSystemTags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
						}
					}
				]
			}
		},
		"EFSMountTarget": {
			"Type": "AWS::EFS::MountTarget",
			"Properties": {
				"FileSystemId": {
					"Ref": "EFS"
				},
				"SubnetId": {
					"Ref": "VPCSubnetsPublicParam"
				},
				"SecurityGroups": [
					{
						"Ref": "EFSSecurityGroup"
					}
				]
			}
		},
		"EFSSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupName": {
					"Fn::Sub": "sftp_efs_${UniqueIdentifierParam}_${AWS::Region}"
				},
				"GroupDescription": "This group allows the EFS to be mounted in the selected subnet.",
				"VpcId": {
					"Ref": "VPCParam"
				},
				"SecurityGroupEgress": [
					{
						"IpProtocol": "-1",
						"FromPort": -1,
						"ToPort": -1,
						"CidrIp": {
							"Ref": "CidrParam"
						}
					}
				],
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": 2049,
						"ToPort": 2049,
						"Description": "EFS",
						"CidrIp": {
							"Ref": "CidrParam"
						}
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
						}
					}
				]
			}
		},
		"EC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"IamInstanceProfile": {
					"Ref": "ECSInstanceProfile"
				},
				"ImageId": {
					"Fn::If": [
						"isCustomAMI",
						{
							"Ref": "CustomAMIIdParam"
						},
						{
							"Fn::FindInMap": [
								"OSIDs",
								{
									"Ref": "AWS::Region"
								},
								"64"
							]
						}
					]
				},
				"InstanceType": {
					"Ref": "InstanceTypeParam"
				},
				"KeyName": {
					"Ref": "KeyNameParam"
				},
				"DisableApiTermination": {
					"Fn::If": [
						"isCustomAMI",
						false,
						true
					]
				},
				"NetworkInterfaces": [
					{
						"AssociatePublicIpAddress": true,
						"DeviceIndex": "0",
						"SubnetId": {
							"Ref": "VPCSubnetsPublicParam"
						},
						"GroupSet": [
							{
								"Ref": "EC2SecurityGroup"
							}
						]
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash",
								{
									"Fn::Sub": "EFS_ID=${EFS}"
								},
								{
									"Fn::Sub": "SFTP_USER=${UsernameParam}"
								},
								{
									"Fn::Sub": "SFTP_PASS=${PasswordParam}"
								},
								"echo EFS_ID=$EFS_ID >> /home/ec2-user/.env",
								"echo SFTP_USER=$SFTP_USER >> /home/ec2-user/.env",
								"echo SFTP_PASS=$SFTP_PASS >> /home/ec2-user/.env",
								{
									"Fn::Sub": "sudo /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource EC2Instance"
								},
								{
									"Fn::Sub": "sudo /opt/aws/bin/cfn-signal -s true --region ${AWS::Region} --stack ${AWS::StackName} --resource EC2Instance"
								}
							]
						]
					}
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
						}
					}
				]
			},
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
						"packages": {
							"rpm": {
								"cloudwatch-agent": "https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm"
							}
						},
						"files": {
							"/etc/cfn/cfn-hup.conf": {
								"mode": "000644",
								"owner": "root",
								"group": "root",
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[main]",
											{
												"Fn::Sub": "stack=${AWS::StackId}"
											},
											{
												"Fn::Sub": "region=${AWS::Region}"
											}
										]
									]
								}
							},
							"/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[cfn-auto-reloader-hook]",
											"triggers=post.update",
											"path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init",
											{
												"Fn::Sub": "action=/opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource EC2Instance"
											}
										]
									]
								}
							},
							"/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"{\r\n\t\"agent\": {\r\n\t\t\"metrics_collection_interval\": 300\r\n\t},\r\n\t\"metrics\": {\r\n\t\t\"metrics_collected\": {\r\n\t\t\t\"mem\": {\r\n\t\t\t\t\"measurement\": [\"available\", \"total\", \"used\"]\r\n\t\t\t},\r\n\t\t\t\"disk\": {\r\n                \"resources\": [\"/\"],\r\n\t\t\t\t\"measurement\": [\"total\", \"used_percent\"]\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"append_dimensions\": {\r\n\t\t\t\"ImageId\": \"${aws:ImageId}\",\r\n\t\t\t\"InstanceId\": \"${aws:InstanceId}\",\r\n\t\t\t\"InstanceType\": \"${aws:InstanceType}\",\r\n\t\t\t\"AutoScalingGroupName\": \"${aws:AutoScalingGroupName}\"\r\n\t\t},\r\n\t\t\"aggregation_dimensions\" : [[\"AutoScalingGroupName\"], [\"InstanceId\", \"InstanceType\"]]\r\n\t}\r\n}"
										]
									]
								}
							}
						},
						"commands": {
							"run_cloudwatch_agent": {
								"command": "sudo amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s"
							}
						},
						"services": {
							"sysvinit": {
								"cfn-hup": {
									"enabled": true,
									"ensureRunning": true,
									"files": [
										"/etc/cfn/cfn-hup.conf",
										"/etc/cfn/hooks.d/cfn-auto-reloader.conf"
									]
								}
							}
						}
					}
				}
			}
		},
		"ElasticIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
						}
					}
				]
			}
		},
		"ElasticIPAssociation": {
			"Type": "AWS::EC2::EIPAssociation",
			"Properties": {
				"InstanceId": {
					"Ref": "EC2Instance"
				},
				"EIP": {
					"Ref": "ElasticIP"
				}
			}
		},
		"EC2Policy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "Volumes",
				"Roles": [
					{
						"Ref": "EC2Role"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"ec2:AttachVolume",
								"ec2:DetachVolume",
								"ec2:DescribeVolumes"
							],
							"Resource": "*"
						}
					]
				}
			}
		},
		"EC2SecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
				},
				"GroupDescription": "This group allows OpenVPN to accept incomming connection from the world, while allowing access to other crucial ports only within then local network.",
				"VpcId": {
					"Ref": "VPCParam"
				},
				"SecurityGroupEgress": [
					{
						"IpProtocol": "-1",
						"FromPort": -1,
						"ToPort": -1,
						"CidrIp": "0.0.0.0/0"
					}
				],
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22,
						"Description": "SSH",
						"CidrIp": "0.0.0.0/0"
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
						}
					}
				]
			}
		},
		"ECSInstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [
					{
						"Ref": "EC2Role"
					}
				],
				"InstanceProfileName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
				}
			}
		},
		"EC2Role": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "ec2.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
					"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
				]
			}
		},
		"SNSTopicPolicy": {
			"Type": "AWS::SNS::TopicPolicy",
			"Properties": {
				"Topics": [
					{
						"Ref": "SNSTopic"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "events.amazonaws.com"
							},
							"Action": "sns:Publish",
							"Resource": {
								"Ref": "SNSTopic"
							}
						}
					]
				}
			}
		},
		"SNSTopic": {
			"Type": "AWS::SNS::Topic",
			"Properties": {
				"DisplayName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
				},
				"TopicName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
				},
				"Tags": [
					{
						"Key": "Description",
						"Value": "Send out messages about EC2 alarms that monitor the basic health of an instance."
					}
				]
			}
		},
		"SNSSubscription": {
			"Type": "AWS::SNS::Subscription",
			"Properties": {
				"Endpoint": {
					"Ref": "EmailParam"
				},
				"Protocol": "email",
				"TopicArn": {
					"Ref": "SNSTopic"
				}
			}
		},
		"CPUBurstAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}_cpu_burst"
				},
				"AlarmDescription": "Track CPU Burst utilization.",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 1,
				"Unit": "Count",
				"Period": 300,
				"Threshold": 100,
				"Namespace": "AWS/EC2",
				"MetricName": "CPUSurplusCreditBalance",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "InstanceId",
						"Value": {
							"Ref": "EC2Instance"
						}
					}
				]
			}
		},
		"CPULoadAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}_cpu_load"
				},
				"AlarmDescription": "Track EC2 CPU utilization.",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 2,
				"Period": 120,
				"Threshold": 90,
				"Namespace": "AWS/EC2",
				"MetricName": "CPUUtilization",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "InstanceId",
						"Value": {
							"Ref": "EC2Instance"
						}
					}
				]
			}
		},
		"EC2InstanceRecoveryAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}_ec2_recovery"
				},
				"AlarmDescription": "Recover the Instance if there is a Hardware failire within AWS.",
				"Namespace": "AWS/EC2",
				"MetricName": "StatusCheckFailed_System",
				"Statistic": "Minimum",
				"Period": "60",
				"EvaluationPeriods": "2",
				"ComparisonOperator": "GreaterThanThreshold",
				"Threshold": "0",
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					},
					{
						"Fn::Sub": "arn:aws:automate:${AWS::Region}:ec2:recover"
					}
				],
				"Dimensions": [
					{
						"Name": "InstanceId",
						"Value": {
							"Ref": "EC2Instance"
						}
					}
				]
			}
		},
		"CloudWatchDashboardInstances": {
			"Type": "AWS::CloudWatch::Dashboard",
			"Properties": {
				"DashboardName": {
					"Fn::Sub": "sftp_user_single${UniqueIdentifierParam}_${AWS::Region}"
				},
				"DashboardBody": {
					"Fn::Sub": [
						"{\r\n    \"widgets\": [\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 4,\r\n            \"width\": 24,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"CPUUtilization\", \"InstanceId\", \"${InstanceId}\" ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"CPU\",\r\n                \"period\": 300,\r\n                \"stat\": \"Average\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 1,\r\n            \"width\": 24,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"NetworkIn\", \"InstanceId\", \"${InstanceId}\" ],\r\n                    [ \".\", \"NetworkOut\", \".\", \".\" ]\r\n                ],\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Network\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 7,\r\n            \"width\": 24,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"CPUCreditBalance\", \"InstanceId\", \"${InstanceId}\", { \"yAxis\": \"right\" } ],\r\n                    [ \".\", \"CPUSurplusCreditsCharged\", \".\", \".\" ],\r\n                    [ \".\", \"CPUCreditUsage\", \".\", \".\" ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"stat\": \"Average\",\r\n                \"period\": 300,\r\n                \"title\": \"CPU Credit Balance\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 3,\r\n            \"y\": 10,\r\n            \"width\": 21,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"mem_available\", \"InstanceId\", \"${InstanceId}\", \"InstanceType\", \"${InstanceType}\", { \"color\": \"#2ca02c\" } ],\r\n                    [ \".\", \"mem_used\", \".\", \".\", \".\", \".\", { \"color\": \"#d62728\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"stat\": \"Average\",\r\n                \"period\": 300,\r\n                \"title\": \"RAM\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 10,\r\n            \"width\": 3,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"mem_total\", \"InstanceId\", \"${InstanceId}\", \"InstanceType\", \"${InstanceType}\" ]\r\n                ],\r\n                \"region\": \"${region}\",\r\n                \"period\": 300,\r\n                \"title\": \"Total\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 3,\r\n            \"y\": 16,\r\n            \"width\": 21,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"metrics\": [\r\n                    [ \"AWS/EFS\", \"TotalIOBytes\", \"FileSystemId\", \"${FileSystemId}\" ]\r\n                ],\r\n                \"region\": \"${region}\",\r\n                \"title\": \"EFS Size\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 16,\r\n            \"width\": 3,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EFS\", \"TotalIOBytes\", \"FileSystemId\", \"${FileSystemId}\" ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"EFS Size\",\r\n                \"period\": 300,\r\n                \"stat\": \"Maximum\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"text\",\r\n            \"x\": 0,\r\n            \"y\": 0,\r\n            \"width\": 24,\r\n            \"height\": 1,\r\n            \"properties\": {\r\n                \"markdown\": \"\\n# EC2\\n\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"text\",\r\n            \"x\": 0,\r\n            \"y\": 15,\r\n            \"width\": 24,\r\n            \"height\": 1,\r\n            \"properties\": {\r\n                \"markdown\": \"\\n# EFS\\n\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 3,\r\n            \"y\": 19,\r\n            \"width\": 21,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"metrics\": [\r\n                    [ \"AWS/EFS\", \"DataReadIOBytes\", \"FileSystemId\", \"${FileSystemId}\" ],\r\n                    [ \".\", \"DataWriteIOBytes\", \".\", \".\" ]\r\n                ],\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Read & Write\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"alarm\",\r\n            \"x\": 0,\r\n            \"y\": 13,\r\n            \"width\": 24,\r\n            \"height\": 2,\r\n            \"properties\": {\r\n                \"title\": \"Alarms\",\r\n                \"alarms\": [\r\n                    \"arn:aws:cloudwatch:${region}:${AccountId}:alarm:sftp_user_single${UniqueIdentifier}_${region}_ec2_recovery\",\r\n                    \"arn:aws:cloudwatch:${region}:${AccountId}:alarm:sftp_user_single${UniqueIdentifier}_${region}_cpu_load\",\r\n                    \"arn:aws:cloudwatch:${region}:${AccountId}:alarm:sftp_user_single${UniqueIdentifier}_${region}_cpu_burst\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 19,\r\n            \"width\": 3,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"view\": \"pie\",\r\n                \"stacked\": false,\r\n                \"metrics\": [\r\n                    [ \"AWS/EFS\", \"DataReadIOBytes\", \"FileSystemId\", \"${FileSystemId}\" ],\r\n                    [ \".\", \"DataWriteIOBytes\", \".\", \".\" ]\r\n                ],\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Read & Write\",\r\n                \"period\": 300,\r\n                \"setPeriodToTimeRange\": true\r\n            }\r\n        }\r\n    ]\r\n}",
						{
							"InstanceId": {
								"Ref": "EC2Instance"
							},
							"InstanceType": {
								"Ref": "InstanceTypeParam"
							},
							"region": {
								"Ref": "AWS::Region"
							},
							"AccountId": {
								"Ref": "AWS::AccountId"
							},
							"UniqueIdentifier": {
								"Ref": "UniqueIdentifierParam"
							},
							"FileSystemId": {
								"Ref": "EFS"
							}
						}
					]
				}
			}
		}
	}
}